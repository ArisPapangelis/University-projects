setwd("C:/Users/FrenzyCawk/Desktop/Lab 4. kNN, ANN")
rm(list=ls())
source('C:/Users/FrenzyCawk/Desktop/HMMY/9ο Εξαμηνο/Αναγνωριση Προτυπων/Lab 4. kNN, ANN/Quiz4.R')
source('C:/Users/FrenzyCawk/Desktop/Lab 4. kNN, ANN/Quiz4.R')
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
alldata
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(X1,X2, col = Y, pch = c("o","+")[Y] )
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[Y] )
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3)
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
?plot
?knn
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
knn(alldata[,c("X1","X2")], c(-1,1), alldata$Y, k=5, prob = TRUE)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
library(neuralnet)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
rm(list=ls())
#kNN
library(class)
knndata = read.csv("knndata.txt")
X_train = knndata[,c("X1","X2")]
Y_train = knndata$Y
plot(X_train, col = Y_train, pch = c("o","+")[Y_train] )
knn(X_train, c(0.7,0.4), Y_train, k=1, prob = TRUE)
knn(X_train, c(0.7,0.4), Y_train, k=5, prob = TRUE)
knn(X_train, c(0.7,0.6), Y_train, k=5, prob = TRUE)
#ANN
anndata = data.frame(X1 = c(0,0,1,1), X2 = c(0,1,0,1), Y = c(1,1,-1,-1))
library(neuralnet)
Y12 = ifelse(anndata$Y>0,1,2)
plot(anndata[,c("X1","X2")], col = Y12, pch = c("o","+")[Y12])
model <- neuralnet(Y ~ X1+X2, anndata, hidden = 0, threshold = 0.000001)
plot(model)
print(model$weights)
#ANN with alldata.txt
alldata = read.csv("alldata.txt")
trainingdata = alldata[1:600,]
testdata = alldata[601:800,]
plot(trainingdata[,c(1,2)], col = trainingdata$y, pch = c("o","+")[trainingdata$y])
#2 layers 2 nodes
model <- neuralnet(y ~ X1+X2, data = trainingdata, hidden = c(2,2), threshold = 0.01)
plot(model)
yEstimateTrain = compute(model,trainingdata[,c(1:2)])$net.result
TrainingError = trainingdata$y - yEstimateTrain
MAE1 = mean(abs(trainingdata$y - yEstimateTrain))
plot(hist(TrainingError, breaks = 20))
yEstimateTest = compute(model,testdata[,c(1:2)])$net.result
TestingError = testdata$y - yEstimateTest
MAE2 = mean(abs(testdata$y - yEstimateTrain))
plot(hist(TestingError, breaks = 20))
#3 layers 2 nodes (vector length is number of layers in hidden)
model <- neuralnet(y ~ X1+X2, data = trainingdata, hidden = c(2,2,2), threshold = 0.01)
plot(model)
yEstimateTrain = compute(model,trainingdata[,c(1:2)])$net.result
TrainingError = trainingdata$y - yEstimateTrain
MAE1 = mean(abs(trainingdata$y - yEstimateTrain))
plot(hist(TrainingError, breaks = 20))
yEstimateTest = compute(model,testdata[,c(1:2)])$net.result
TestingError = testdata$y - yEstimateTest
MAE2 = mean(abs(testdata$y - yEstimateTest))
plot(hist(TestingError, breaks = 20))
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
#Question 2
knn(alldata[,c("X1","X2")], c(-1,1), alldata$Y, k=5, prob = TRUE)
#Question 3
library(neuralnet)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
yEstimate = compute(model,alldata[,c(1:2)])$net.result
TrainingError = alldata$Y - yEstimate
MAE = mean(abs(TrainingError))
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
#Question 2
knn(alldata[,c("X1","X2")], c(-1,1), alldata$Y, k=5, prob = TRUE)
#Question 3
library(neuralnet)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
yEstimate = compute(model,alldata[,c(1:2)])$net.result
TrainingError = alldata$Y - yEstimate
MAE = mean(abs(TrainingError))
plot(hist(TrainingError, breaks = 20))
MAE
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
#Question 2
knn(alldata[,c("X1","X2")], c(-1,1), alldata$Y, k=5, prob = TRUE)
#Question 3
library(neuralnet)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
yEstimate = compute(model,alldata[,c(1:2)])$net.result
TrainingError = alldata$Y - yEstimate
MAE = mean(abs(TrainingError))
plot(hist(TrainingError, breaks = 20))
rm(list=ls())
X1 = c(-2,-2,-1.8,-1.4,-1.2,1.2,1.3,1.3,2,2,-0.9,-0.5,-0.2,0,0,0.3,0.4,0.5,0.8,1)
X2 = c(-2,1,-1,2,1.2,1,-1,2,0,-2,0,-1,1.5,0,-0.5,1,0,-1.5,1.5,0)
Y = c(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2)
alldata = data.frame(X1,X2,Y)
plot(alldata$X1,alldata$X2, col = alldata$Y, pch = c("o","+")[alldata$Y] )
#Question 1
library(class)
knn(alldata[,c("X1","X2")], c(1.5,-0.5), alldata$Y, k=3, prob = TRUE)
#Question 2
knn(alldata[,c("X1","X2")], c(-1,1), alldata$Y, k=5, prob = TRUE)
#Question 3
library(neuralnet)
X1 = c(2,2,-2,-2,1,1,-1,-1)
X2 = c(2,-2,-2,2,1,-1,-1,1)
Y = c(1,1,1,1,2,2,2,2)
alldata = data.frame(X1,X2,Y)
model <- neuralnet(Y ~ X1+X2, data = alldata, hidden = c(2), threshold = 0.01)
plot(model)
yEstimate = compute(model,alldata[,c(1:2)])$net.result
TrainingError = alldata$Y - yEstimate
MAE = mean(abs(TrainingError))
plot(hist(TrainingError, breaks = 20))
